name: Claude Code

on:
    issue_comment:
        types: [created]
    pull_request_review_comment:
        types: [created]
    issues:
        types: [opened, assigned]
    pull_request_review:
        types: [submitted]

jobs:
    claude:
        if: |
            (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
            (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
            (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
            (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: read
            issues: read
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: Run Claude Code
              id: claude
              uses: anthropics/claude-code-action@beta
              with:
                  anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}

                  # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
                  model: "claude-opus-4-20250514"

                  # Optional: Customize the trigger phrase (default: @claude)
                  # trigger_phrase: "/claude"

                  # Optional: Trigger when specific user is assigned to an issue
                  # assignee_trigger: "claude-bot"

                  # Optional: Allow Claude to run specific commands
                  allowed_tools: |
                      Bash(go test*)
                      Bash(golangci-lint*)
                      Bash(npm ci)
                      Bash(npm run check)
                      Bash(npm run build)
                      Bash(cat*)
                      Bash(ls*)
                      Bash(pwd)
                      Bash(./scripts/test-all.sh)

                  # Optional: Add custom instructions for Claude to customize its behavior for your project
                  custom_instructions: |
                      Follow our coding standards
                      Ensure all new code has tests
                      
                      When reviewing pull requests, provide feedback on:
                      - Code quality and best practices
                      - Potential bugs or issues
                      - Performance considerations
                      - Security concerns
                      - Test coverage
                      - For API endpoints: Security, input validation, and error handling
                      
                      Run the test suite using ./scripts/test-all.sh and report any failures.
                      Check linting compliance with golangci-lint for backend Go code.
                      Be constructive and helpful in your feedback.
                  #   Use TypeScript for new files

                  # Optional: Custom environment variables for Claude
                  # claude_env: |
                  #   NODE_ENV: test
